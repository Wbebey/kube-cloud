version: '3'
services:
#  front:
#    build:
#      context: ./front
#      dockerfile: Dockerfile
#    ports:
#      - "80:80"

  back:
    build:
        context: ./back
        dockerfile: Dockerfile
    ports:
        - "9000:9000"
    volumes:
      - ./back:/var/www
    entrypoint: /usr/local/bin/entrypoint.sh
    networks:
     - default
    depends_on:
      - mysql
      # - rabbitmq

  back-nginx: 
    image: nginx:1.17-alpine
    restart: unless-stopped
    ports:
      - 8000:80
    volumes:
      - ./back:/var/www
      - ./back/nginx:/etc/nginx/conf.d/
    networks:
      - default

  
  mysql:
   image: mysql:8.0
   restart: unless-stopped
   environment:
     MYSQL_DATABASE: 'db' 
     MYSQL_USER: 'user'
     MYSQL_PASSWORD: 'password'
     MYSQL_ROOT_PASSWORD: 'password'
   ports:
     - '3306:3306'
   expose:    
     - '3306'
   volumes:
     - my-db:/var/lib/mysql
   networks:
     - default

  reporting:
    build:
        context: ./reporting
        dockerfile: Dockerfile
    ports:
      - "8080:8080"


  # rabbitmq:
  #  image: rabbitmq:management
  #  container_name: rabbitmq
  #  environment:
  #    - RABBITMQ_DEFAULT_USER=guest
  #    - RABBITMQ_DEFAULT_PASS=guest
  #  ports:
  #    - "5672:5672"
  #    - "15672:15672"


#  elasticsearch:
#    image: docker.elastic.co/elasticsearch/elasticsearch:7.5.2
#    environment:
#      - discovery.type=single-node
#    ports:
#      - "9200:9200"
#      - "9300:9300"

# Names our volume
volumes:
  my-db:


networks:
  default:
    driver: bridge